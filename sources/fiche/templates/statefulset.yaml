apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fiche.fullname" . }}
  labels:
    {{- include "fiche.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fiche.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "fiche.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fiche.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fiche.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.extraInitContainers }}
          {{ toYaml .Values.extraInitContainers | nindent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.statefulset.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}-fiche
          securityContext:
            {{- toYaml .Values.fiche.securityContext | nindent 12 }}
          image: "{{ .Values.fiche.image.repository }}:{{ .Values.fiche.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.fiche.image.pullPolicy }}
          env:
            - name: FICHE_PORT
              value: "9999"
            - name: FICHE_DIRECTORY
              value: "/data"
            - name: FICHE_DOMAIN
              value: "{{ .Values.fiche.domain }}"
            {{- if .Values.fiche.https }}
            - name: FICHE_HTTPS
              value: "1"
            {{- end }}
          ports:
            - name: {{ include "fiche.fullname" . }}-tcp
              containerPort: 9999
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            tcpSocket:
              port: "{{ include "fiche.fullname" . }}-tcp"
          readinessProbe:
            tcpSocket:
              port: "{{ include "fiche.fullname" . }}-tcp"
          resources:
            {{- toYaml .Values.fiche.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-nginx
          securityContext:
            {{- toYaml .Values.nginx.securityContext | nindent 12 }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: {{ include "fiche.fullname" . }}-http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /usr/share/nginx/html
              readOnly: true
            - name: config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          livenessProbe:
            tcpSocket:
              port: {{ include "fiche.fullname" . }}-http
          readinessProbe:
            tcpSocket:
              port: {{ include "fiche.fullname" . }}-http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "fiche.fullname" . }}-nginx-conf

{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      {{- with .Values.persistence.labels }}
        labels:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        {{- if .Values.persistence.volumeMode }}
        volumeMode: {{ .Values.persistence.volumeMode }}
        {{- end }}
        accessModes:
          {{- range .Values.persistence.accessModes }}
            - {{ . | quote }}
          {{- end }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}




